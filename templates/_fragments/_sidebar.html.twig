<aside>
<div>
    <h2>Chats</h2>
</div>

{# on ajoute la liste des utilisateurs connectés #}
<div class="mb-3">
{% if twig_globals.getGlobals()['online_users'] is not empty %}
    <ul class ="user_connected_list">
    {% for online_user in twig_globals.getGlobals()['online_users'] %}
        <li data-id={{ online_user.id  }}>{{ online_user.username }} : online</li>
    {% endfor %}
    {% else %}
    <li>
        Aucun utilisateur connecté
    </li>
{% endif %}
    </ul>
</div>


<div>
{% if twig_globals.getGlobals()['all_channels'] is not empty %}
    <ul>
    {% for channel in twig_globals.getGlobals()['all_channels'] %}
        <li>
            <a href="{{ path('app_channel_show', {'id': channel.id}) }}">{{ channel.name }}</a>
            <span id="notifIcon"></span> 
            {# on prepare une span pour le nombre de notif...à gèrer en js 
            et renvoyer les notifs depuis le controller...#}
        </li>
    {% endfor %}
    {% else %}
        <li>
            <a href="{{ path('app_channel_new') }}">Créer un nouveau chat</a>
        </li>
    {% endif %}
    </ul>
</div>
</aside>

{% block javascripts %}

<script>
    /////////////////
    const topicslink = new URL('https://mercure.simschab.cloud/.well-known/mercure');
    topicslink.searchParams.append('topic', encodeURIComponent('user_connected'));
    topicslink.searchParams.append('topic', encodeURIComponent('user_disconnected'));
    // on peut imaginer ajouter d'autres topics pour les messages, les channels, etc...
    topicslink.searchParams.append('topic', encodeURIComponent('channel_created'));
    topicslink.searchParams.append('topic', encodeURIComponent('channel_deleted'));
    topicslink.searchParams.append('topic', encodeURIComponent('channel_updated'));
    topicslink.searchParams.append('topic', encodeURIComponent('message_created'));

    const usersEventSource = new EventSource(topicslink);

    const usersConnectedList = document.querySelector('.user_connected_list');
    console.log(usersConnectedList);

    usersEventSource.onmessage = (e) => {
        const data = JSON.parse(e.data);
        console.log(data);
        if (data.status === 'online') {

            // cause we have boot a request from users status in database to not clear list on page change 
            // and a direct request from mercure to update the list when a user connect or disconnect
            // check fist if the user is already in the list for not adding it twice in the list

            // si on change de page ou en arrivant sur l'interface on va avoir la liste des utilisateurs connectés via la varibale globale twig et la requete en bdd
            // donc on ne veut pas faire de doublon avec la liste des utilisateurs qui se connectent et aussi ne pas perdre les utilisateurs qui se connectent si on change de page...
            const liAlreadyInList = usersConnectedList.querySelector(`li[data-id="${data.user_id}"]`);
            if (liAlreadyInList) {
                return;
            }

            const li = document.createElement('li');
            li.textContent = data.username + ' : ' + data.status;
            li.dataset.id = data.user_id;
            usersConnectedList.appendChild(li);
        } else if (data.status === 'offline') {
            const li = usersConnectedList.querySelector(`li[data-id="${data.user_id}"]`);
            li.remove();
        }
    };

    /////////////////

</script>


{% endblock %}

